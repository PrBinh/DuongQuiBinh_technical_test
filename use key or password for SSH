Both SSH key and password authentication have their pros and cons. Understand them to make the right choice for us company.

Pros of password authentication:
  The first pro of password authentication is convenience for users.
    Usernames and passwords are easily remembered, and if web login is possible, browsers can auto-fill these fields, making it even easier to log in.
    And everyone knows how to log in using passwords, so there’s no barrier to adoption.
  The next benefit is that administrators can increase username and password security by creating policies such as:
    Setting a maximum number of attempts to access your account within a certain timeframe (e.g. 5 times within 15 minutes) before the account is locked
    Requiring a certain amount of capitalized letters, numbers, and symbols in the password
    Forcing users to reset their passwords periodically (e.g. every 90 days)
    
Cons of password authentication:
  Create passwords that are easily remembered, it make these accounts extremely susceptible to intrusion.
  Simple passwords are used across multiple apps, the potential for a breach increased massively.
  Usernames and passwords have to be directly transmitted to the server being logged into, thus making this method more prone to hacking.
  You can mistakenly log into the wrong server or website, and now that server or website has your password. 
  Hackers love making clones of popular websites to scam users out of their login credentials.
  A final con is that employees may get frustrated by password policies set by IT administrators to increase security.
  
Authentication with SSH keys can be a little more complex, but helps increase security when logging into an SFTP server.
Pros of SSH key authentication:
  The first pro is that SSH keys are more difficult to hack than passwords and thus are more secure.
  Additionally, SSH keys aren’t human generated, so we’ll avoid having easy-to-guess keys like “123456” or “password”.
  And unlike passwords, our private SSH key isn’t sent to the server. So even if malicious actors hack into the server, they still can’t access our account.
  Also, the SSH connection can only come from the computer where the private key resides. We can log in using a password from any computer, even a shared desktop at your local library.
  Hopefully hackers aren’t hanging out in the science fiction section!
  Finally, we can add a password to your SSH key authentication (multi-factor authentication) to increase security even further.
